/* Generated By:JJTree: Do not edit this line. /disk/zo/vg0lv0/users/eagle/work/jass/jass/src/jass/parser/JassParserTreeConstants.java */

package jass.parser;

public interface JassParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTPACKAGEDECLARATION = 1;
  public int JJTIMPORTDECLARATION = 2;
  public int JJTTYPEDECLARATION = 3;
  public int JJTCLASSDECLARATION = 4;
  public int JJTUNMODIFIEDCLASSDECLARATION = 5;
  public int JJTCLASSBODY = 6;
  public int JJTNESTEDCLASSDECLARATION = 7;
  public int JJTCLASSBODYDECLARATION = 8;
  public int JJTMETHODDECLARATIONLOOKAHEAD = 9;
  public int JJTINTERFACEDECLARATION = 10;
  public int JJTNESTEDINTERFACEDECLARATION = 11;
  public int JJTUNMODIFIEDINTERFACEDECLARATION = 12;
  public int JJTINTERFACEMEMBERDECLARATION = 13;
  public int JJTFIELDDECLARATION = 14;
  public int JJTVARIABLEDECLARATOR = 15;
  public int JJTVARIABLEDECLARATORID = 16;
  public int JJTVARIABLEINITIALIZER = 17;
  public int JJTARRAYINITIALIZER = 18;
  public int JJTMETHODDECLARATION = 19;
  public int JJTMETHODDECLARATOR = 20;
  public int JJTFORMALPARAMETERS = 21;
  public int JJTFORMALPARAMETER = 22;
  public int JJTCONSTRUCTORDECLARATION = 23;
  public int JJTEXPLICITCONSTRUCTORINVOCATION = 24;
  public int JJTINITIALIZER = 25;
  public int JJTTYPE = 26;
  public int JJTPRIMITIVETYPE = 27;
  public int JJTRESULTTYPE = 28;
  public int JJTNAME = 29;
  public int JJTNAMELIST = 30;
  public int JJTEXPRESSION = 31;
  public int JJTASSIGNMENTOPERATOR = 32;
  public int JJTCONDITIONALEXPRESSION = 33;
  public int JJTCONDITIONALOREXPRESSION = 34;
  public int JJTCONDITIONALANDEXPRESSION = 35;
  public int JJTINCLUSIVEOREXPRESSION = 36;
  public int JJTEXCLUSIVEOREXPRESSION = 37;
  public int JJTANDEXPRESSION = 38;
  public int JJTEQUALITYEXPRESSION = 39;
  public int JJTINSTANCEOFEXPRESSION = 40;
  public int JJTRELATIONALEXPRESSION = 41;
  public int JJTSHIFTEXPRESSION = 42;
  public int JJTADDITIVEEXPRESSION = 43;
  public int JJTMULTIPLICATIVEEXPRESSION = 44;
  public int JJTUNARYEXPRESSION = 45;
  public int JJTPREINCREMENTEXPRESSION = 46;
  public int JJTPREDECREMENTEXPRESSION = 47;
  public int JJTUNARYEXPRESSIONNOTPLUSMINUS = 48;
  public int JJTVOID = 49;
  public int JJTPOSTFIXEXPRESSION = 50;
  public int JJTPOSTFIXOPERATOR = 51;
  public int JJTCASTEXPRESSION = 52;
  public int JJTPRIMARYEXPRESSION = 53;
  public int JJTPRIMARYPREFIX = 54;
  public int JJTPRIMARYSUFFIX = 55;
  public int JJTLITERAL = 56;
  public int JJTBOOLEANLITERAL = 57;
  public int JJTNULLLITERAL = 58;
  public int JJTARGUMENTS = 59;
  public int JJTARGUMENTLIST = 60;
  public int JJTALLOCATIONEXPRESSION = 61;
  public int JJTARRAYDIMSANDINITS = 62;
  public int JJTSTATEMENT = 63;
  public int JJTLABELEDSTATEMENT = 64;
  public int JJTBLOCK = 65;
  public int JJTBLOCKSTATEMENT = 66;
  public int JJTLOCALVARIABLEDECLARATION = 67;
  public int JJTEMPTYSTATEMENT = 68;
  public int JJTSTATEMENTEXPRESSION = 69;
  public int JJTSWITCHSTATEMENT = 70;
  public int JJTSWITCHLABEL = 71;
  public int JJTIFSTATEMENT = 72;
  public int JJTWHILESTATEMENT = 73;
  public int JJTDOSTATEMENT = 74;
  public int JJTFORSTATEMENT = 75;
  public int JJTFORINIT = 76;
  public int JJTSTATEMENTEXPRESSIONLIST = 77;
  public int JJTFORUPDATE = 78;
  public int JJTBREAKSTATEMENT = 79;
  public int JJTCONTINUESTATEMENT = 80;
  public int JJTRETURNSTATEMENT = 81;
  public int JJTTHROWSTATEMENT = 82;
  public int JJTSYNCHRONIZEDSTATEMENT = 83;
  public int JJTTRYSTATEMENT = 84;
  public int JJTASSERTSTATEMENT = 85;
  public int JJTMETHODBODYBLOCK = 86;
  public int JJTASSERTIONCLAUSE = 87;
  public int JJTREQUIRECLAUSE = 88;
  public int JJTENSURECLAUSE = 89;
  public int JJTBOOLEANASSERTION = 90;
  public int JJTBOOLEANCHANGEASSERTION = 91;
  public int JJTCHANGELIST = 92;
  public int JJTFIELDREFERENCE = 93;
  public int JJTASSERTIONLABEL = 94;
  public int JJTCLASSINVARIANTCLAUSE = 95;
  public int JJTINVARIANTASSERTION = 96;
  public int JJTINVARIANTCLAUSE = 97;
  public int JJTCHECKCLAUSE = 98;
  public int JJTRESCUECLAUSE = 99;
  public int JJTRESCUECATCH = 100;
  public int JJTVARIANTCLAUSE = 101;
  public int JJTASSERTIONEXPRESSION = 102;
  public int JJTASSERTIONFORALLEXISTSEXPRESSION = 103;
  public int JJTASSERTIONFINITEENUMERATIONCREATION = 104;
  public int JJTASSERTIONRANGEEXPRESSION = 105;
  public int JJTASSERTIONCONDITIONALEXPRESSION = 106;
  public int JJTASSERTIONCONDITIONALOREXPRESSION = 107;
  public int JJTASSERTIONCONDITIONALANDEXPRESSION = 108;
  public int JJTASSERTIONINCLUSIVEOREXPRESSION = 109;
  public int JJTASSERTIONEXCLUSIVEOREXPRESSION = 110;
  public int JJTASSERTIONANDEXPRESSION = 111;
  public int JJTASSERTIONEQUALITYEXPRESSION = 112;
  public int JJTASSERTIONINSTANCEOFEXPRESSION = 113;
  public int JJTASSERTIONRELATIONALEXPRESSION = 114;
  public int JJTASSERTIONSHIFTEXPRESSION = 115;
  public int JJTASSERTIONADDITIVEEXPRESSION = 116;
  public int JJTASSERTIONMULTIPLICATIVEEXPRESSION = 117;
  public int JJTASSERTIONUNARYEXPRESSION = 118;
  public int JJTASSERTIONUNARYEXPRESSIONNOTPLUSMINUS = 119;
  public int JJTUNARYPLUSMINUSOPERATOR = 120;
  public int JJTUNARYNOTPLUSMINUSOPERATOR = 121;
  public int JJTASSERTIONCASTLOOKAHEAD = 122;
  public int JJTASSERTIONCASTEXPRESSION = 123;
  public int JJTASSERTIONPRIMARYEXPRESSION = 124;
  public int JJTASSERTIONPRIMARYPREFIX = 125;
  public int JJTASSERTIONPRIMARYSUFFIX = 126;
  public int JJTASSERTIONARGUMENTS = 127;
  public int JJTASSERTIONARGUMENTLIST = 128;
  public int JJTRETRYSTATEMENT = 129;
  public int JJTTRACEASSERTION = 130;
  public int JJTTRACEASSERTIONDECLARATION = 131;
  public int JJTTRACECONSTANT = 132;
  public int JJTPROCESSDECLARATION = 133;
  public int JJTPROCESSDECLARATOR = 134;
  public int JJTPROCESSEXPRESSION = 135;
  public int JJTPROCESSPARALLELEXPRESSION = 136;
  public int JJTPROCESSCHOICEEXPRESSION = 137;
  public int JJTPROCESSPREFIXEXPRESSION = 138;
  public int JJTPROCESSPRIMARYEXPRESSION = 139;
  public int JJTPROCESSCALL = 140;
  public int JJTPROCESSJAVABLOCK = 141;
  public int JJTCONDITIONALCOMMUNICATION = 142;
  public int JJTBASICPROCESS = 143;
  public int JJTPROCESSIFELSEEXPRESSION = 144;
  public int JJTCOMMUNICATIONEXPRESSIONS = 145;
  public int JJTCOMMUNICATIONEXPRESSION = 146;
  public int JJTCOMMUNICATION = 147;
  public int JJTCOMMUNICATIONWITHWILDCARDS = 148;
  public int JJTCOMMUNICATIONPARAMETERLIST = 149;
  public int JJTCOMMUNICATIONPARAMETER = 150;
  public int JJTLAYEDDOWNPARAMETER = 151;
  public int JJTTYPEDPARAMETER = 152;
  public int JJTINPUTPARAMETER = 153;
  public int JJTOUTPUTPARAMETER = 154;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "PackageDeclaration",
    "ImportDeclaration",
    "TypeDeclaration",
    "ClassDeclaration",
    "UnmodifiedClassDeclaration",
    "ClassBody",
    "NestedClassDeclaration",
    "ClassBodyDeclaration",
    "MethodDeclarationLookahead",
    "InterfaceDeclaration",
    "NestedInterfaceDeclaration",
    "UnmodifiedInterfaceDeclaration",
    "InterfaceMemberDeclaration",
    "FieldDeclaration",
    "VariableDeclarator",
    "VariableDeclaratorId",
    "VariableInitializer",
    "ArrayInitializer",
    "MethodDeclaration",
    "MethodDeclarator",
    "FormalParameters",
    "FormalParameter",
    "ConstructorDeclaration",
    "ExplicitConstructorInvocation",
    "Initializer",
    "Type",
    "PrimitiveType",
    "ResultType",
    "Name",
    "NameList",
    "Expression",
    "AssignmentOperator",
    "ConditionalExpression",
    "ConditionalOrExpression",
    "ConditionalAndExpression",
    "InclusiveOrExpression",
    "ExclusiveOrExpression",
    "AndExpression",
    "EqualityExpression",
    "InstanceOfExpression",
    "RelationalExpression",
    "ShiftExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "UnaryExpression",
    "PreIncrementExpression",
    "PreDecrementExpression",
    "UnaryExpressionNotPlusMinus",
    "void",
    "PostfixExpression",
    "PostfixOperator",
    "CastExpression",
    "PrimaryExpression",
    "PrimaryPrefix",
    "PrimarySuffix",
    "Literal",
    "BooleanLiteral",
    "NullLiteral",
    "Arguments",
    "ArgumentList",
    "AllocationExpression",
    "ArrayDimsAndInits",
    "Statement",
    "LabeledStatement",
    "Block",
    "BlockStatement",
    "LocalVariableDeclaration",
    "EmptyStatement",
    "StatementExpression",
    "SwitchStatement",
    "SwitchLabel",
    "IfStatement",
    "WhileStatement",
    "DoStatement",
    "ForStatement",
    "ForInit",
    "StatementExpressionList",
    "ForUpdate",
    "BreakStatement",
    "ContinueStatement",
    "ReturnStatement",
    "ThrowStatement",
    "SynchronizedStatement",
    "TryStatement",
    "AssertStatement",
    "MethodBodyBlock",
    "AssertionClause",
    "RequireClause",
    "EnsureClause",
    "BooleanAssertion",
    "BooleanChangeAssertion",
    "ChangeList",
    "FieldReference",
    "AssertionLabel",
    "ClassInvariantClause",
    "InvariantAssertion",
    "InvariantClause",
    "CheckClause",
    "RescueClause",
    "RescueCatch",
    "VariantClause",
    "AssertionExpression",
    "AssertionForAllExistsExpression",
    "AssertionFiniteEnumerationCreation",
    "AssertionRangeExpression",
    "AssertionConditionalExpression",
    "AssertionConditionalOrExpression",
    "AssertionConditionalAndExpression",
    "AssertionInclusiveOrExpression",
    "AssertionExclusiveOrExpression",
    "AssertionAndExpression",
    "AssertionEqualityExpression",
    "AssertionInstanceOfExpression",
    "AssertionRelationalExpression",
    "AssertionShiftExpression",
    "AssertionAdditiveExpression",
    "AssertionMultiplicativeExpression",
    "AssertionUnaryExpression",
    "AssertionUnaryExpressionNotPlusMinus",
    "UnaryPlusMinusOperator",
    "UnaryNotPlusMinusOperator",
    "AssertionCastLookahead",
    "AssertionCastExpression",
    "AssertionPrimaryExpression",
    "AssertionPrimaryPrefix",
    "AssertionPrimarySuffix",
    "AssertionArguments",
    "AssertionArgumentList",
    "RetryStatement",
    "TraceAssertion",
    "TraceAssertionDeclaration",
    "TraceConstant",
    "ProcessDeclaration",
    "ProcessDeclarator",
    "ProcessExpression",
    "ProcessParallelExpression",
    "ProcessChoiceExpression",
    "ProcessPrefixExpression",
    "ProcessPrimaryExpression",
    "ProcessCall",
    "ProcessJavaBlock",
    "ConditionalCommunication",
    "BasicProcess",
    "ProcessIfElseExpression",
    "CommunicationExpressions",
    "CommunicationExpression",
    "Communication",
    "CommunicationWithWildcards",
    "CommunicationParameterList",
    "CommunicationParameter",
    "LayedDownParameter",
    "TypedParameter",
    "InputParameter",
    "OutputParameter",
  };
}
