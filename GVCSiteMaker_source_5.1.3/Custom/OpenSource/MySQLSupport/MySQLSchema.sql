--------  Paste GVCGenericObjects.eomodeld SQL starting here ---------------------------------------
--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, LOCKING PESSIMISTIC;

CREATE TABLE GVC_LOOKUP (
	name VARCHAR(50) NOT NULL,
	the_id BIGINT NOT NULL
);

CREATE TABLE GVC_VA_OBJECT (
	is_active CHAR(1) NOT NULL,
	the_id BIGINT NOT NULL
);

ALTER TABLE GVC_LOOKUP ADD PRIMARY KEY (THE_ID);

ALTER TABLE GVC_VA_OBJECT ADD PRIMARY KEY (THE_ID);

COMMIT;
--------  Paste GVCGenericObjects.eomodeld SQL ending here ----------------------------------------

--------  Paste GVCVirtualTables.eomodeld SQL starting here ---------------------------------------
--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, LOCKING PESSIMISTIC;

CREATE TABLE VIRTUAL_COLUMN (
	COLUMN_ID BIGINT NOT NULL,
	COLUMN_TYPE_ID BIGINT NOT NULL,
	DATE_CREATED DATETIME NOT NULL,
	IS_SYSTEM_COLUMN CHAR(1) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	RESTRICTING_VALUE VARCHAR(50) NOT NULL,
	TABLE_ID BIGINT NOT NULL,
	TEXT_DESCRIPTION VARCHAR(6000),
	LOOKUP_COLUMN_ID BIGINT
);

CREATE TABLE COLUMN_TYPE (
	ENTITY_NAME_RESTRICTOR VARCHAR(50) NOT NULL,
	name VARCHAR(50) NOT NULL,
	TEXT_DESCRIPTION VARCHAR(1999),
	the_id BIGINT NOT NULL
);

CREATE TABLE ROOT_TABLE (
	DATE_CREATED DATETIME NOT NULL,
	DATE_MODIFIED DATETIME NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	TABLE_ID BIGINT NOT NULL,
	TEXT_DESCRIPTION VARCHAR(1999)
);

CREATE TABLE VIRTUAL_FIELD (
	RESTRICTING_VALUE VARCHAR(50) NOT NULL,
      BOOLEAN_VALUE VARCHAR(5),
	VIRTUAL_COLUMN_ID BIGINT NOT NULL,
	VIRTUAL_FIELD_ID BIGINT NOT NULL,
	VIRTUAL_ROW_ID BIGINT NOT NULL,
	LOOKUP_VALUE_ID BIGINT,
	LONG_STRING_VALUE LONGTEXT,
	NUMBER_VALUE DECIMAL(30,10),
	STRING_VALUE VARCHAR(6000000),
	DATETIME_VALUE DATETIME
);

CREATE TABLE VIRTUAL_ROW (
	VIRTUAL_ROW_ID BIGINT NOT NULL,
	VIRTUAL_TABLE_ID BIGINT NOT NULL
);

CREATE TABLE VIRTUAL_TABLE (
	DATE_CREATED DATETIME NOT NULL,
	DATE_MODIFIED DATETIME NOT NULL,
	NAME VARCHAR(300) NOT NULL,
	TABLE_ID BIGINT NOT NULL,
	TEXT_DESCRIPTION VARCHAR(6000)
);

ALTER TABLE VIRTUAL_COLUMN ADD PRIMARY KEY (COLUMN_ID);

ALTER TABLE COLUMN_TYPE ADD PRIMARY KEY (THE_ID);

ALTER TABLE ROOT_TABLE ADD PRIMARY KEY (TABLE_ID);

ALTER TABLE VIRTUAL_FIELD ADD PRIMARY KEY (VIRTUAL_FIELD_ID);

ALTER TABLE VIRTUAL_ROW ADD PRIMARY KEY (VIRTUAL_ROW_ID);

ALTER TABLE VIRTUAL_TABLE ADD PRIMARY KEY (TABLE_ID);

--ALTER TABLE VIRTUAL_COLUMN ADD FOREIGN KEY (COLUMN_TYPE_ID) REFERENCES COLUMN_TYPE (THE_ID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE VIRTUAL_FIELD ADD FOREIGN KEY (VIRTUAL_ROW_ID) REFERENCES VIRTUAL_ROW (VIRTUAL_ROW_ID) DEFERRABLE INITIALLY DEFERRED;

COMMIT;

--------  Paste GVCVirtualTables.eomodeld SQL ending here -----------------------------------------

--------  Paste GVCSiteMaker.eomodeld SQL starting here -------------------------------------------
--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, LOCKING PESSIMISTIC;

CREATE TABLE SM_BANNER (
	BANNER_TEXT VARCHAR(300),
	WEBSITE_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_CHANGE_LOG (
	CHANGES VARCHAR(1999),
	DATE_RECORDED DATETIME NOT NULL,
	NOTES VARCHAR(1999),
	OID NUMERIC NOT NULL,
	USER_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_ERROR_LOG (
	APP_NAME VARCHAR(100),
	COMPONENT_NAME VARCHAR(100),
	EVENT_DATE DATETIME,
	EXCEPTION_MESSAGE VARCHAR(1999),
	HOST_NAME VARCHAR(100),
	LOG_TYPE VARCHAR(100),
	OID NUMERIC NOT NULL,
	PAGE_NAME VARCHAR(100),
	REQUEST LONGTEXT,
	STACK_TRACE LONGTEXT,
	USER_ID VARCHAR(100)
);

CREATE TABLE SM_FILE_PASSWORD (
	EXPIRATION_DATE DATETIME,
	FILE_PASSWORD_PKEY NUMERIC NOT NULL,
	PASSWORD VARCHAR(50),
	SITE_FILE_PASSWORD_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_FOOTER (
	LINK_TEXT_1 VARCHAR(300),
	LINK_TEXT_2 VARCHAR(300),
	LINK_TEXT_3 VARCHAR(300),
	LINK_TEXT_4 VARCHAR(300),
	LINK_URL_1 VARCHAR(255),
	LINK_URL_2 VARCHAR(255),
	LINK_URL_3 VARCHAR(255),
	LINK_URL_4 VARCHAR(255),
	WEBSITE_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_GROUP (
	CREATION_DATE DATETIME,
	GROUP_PKEY NUMERIC NOT NULL,
	GROUP_NAME VARCHAR(150) NOT NULL,
	LDAP_GROUP_NAME VARCHAR(255),
	OID_LDAP_BRANCH NUMERIC,
	TYPE VARCHAR(25) NOT NULL,
	PARENT_WEBSITE NUMERIC
);

CREATE TABLE SM_GROUP_FILE (
	FILE_PKEY NUMERIC NOT NULL,
	GROUP_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_GROUP_SECTION (
	GROUP_PKEY NUMERIC NOT NULL,
	SECTION_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_LDAP_BRANCH (
	DISPLAY_NAME VARCHAR(100) NOT NULL,
	DISPLAY_ORDER INTEGER NOT NULL,
	GROUP_SUBTREE VARCHAR(100) NOT NULL,
	INSTRUCTIONS VARCHAR(1999),
	LDAP_ENTITY_NAME VARCHAR(50) NOT NULL,
	OID NUMERIC,
	USER_ID_ATTR VARCHAR(50) NOT NULL,
	USER_SUBTREE VARCHAR(100) NOT NULL
);

CREATE TABLE SM_ORG_UNIT (
	WEBSITE_CREATION_MESSAGE LONGTEXT,
	DEPTH NUMERIC,
	FILE_SIZE_QUOTA NUMERIC,
	FILE_SIZE_USAGE NUMERIC,
	IN_PUBLIC_LIST CHAR(1) NOT NULL,
	OID NUMERIC NOT NULL,
	OID_PARENT_ORG_UNIT NUMERIC,
	UNIT_NAME VARCHAR(765)
);

CREATE TABLE SM_ORG_UNIT_USER (
	ORG_UNIT_OID NUMERIC NOT NULL,
	USER_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_VIRTUAL_TABLE (
	CREATE_USER_FKEY NUMERIC NOT NULL,
	DATE_CREATED DATETIME NOT NULL,
	DATE_MODIFIED DATETIME NOT NULL,
	NAME VARCHAR(300) NOT NULL,
	TABLE_ID BIGINT NOT NULL,
	TEXT_DESCRIPTION VARCHAR(6000),
	UPDATE_USER_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_SECTION (
	COMPONENT_ID NUMERIC NOT NULL,
	DETAILS VARCHAR(255),
	INDENTATION NUMERIC NOT NULL,
	IS_NAVIGABLE CHAR(1) NOT NULL,
	REQUIRE_HTTPS_ACCESS CHAR(1) NOT NULL,
	IS_VERSIONING CHAR(1) NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	NORMAL_NAME VARCHAR(255) NOT NULL,
	OID_SECTION_STYLE NUMERIC,
	SECTION_ORDER NUMERIC NOT NULL,
	SECTION_PKEY NUMERIC NOT NULL,
	TYPE_OID NUMERIC NOT NULL,
	WEBSITE_FKEY NUMERIC NOT NULL
);
CREATE TABLE SM_SECTION_CONTRIBUTOR_GROUP (
	GROUP_PKEY NUMERIC NOT NULL,
	SECTION_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_SECTION_EDITOR_GROUP (
	GROUP_PKEY NUMERIC NOT NULL,
	SECTION_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_SECTION_STYLE (
	BANNER_COMP VARCHAR(50) NOT NULL,
	DATE_CREATED DATETIME NOT NULL,
	DATE_MODIFIED DATETIME,
	DEFAULT_STYLE CHAR(1) NOT NULL,
	FOOTER_COMP VARCHAR(50) NOT NULL,
	NAME VARCHAR(300),
	NAVBAR_COMP VARCHAR(50) NOT NULL,
	NOTES VARCHAR(6000),
	OID NUMERIC NOT NULL,
	OID_CREATED_BY NUMERIC NOT NULL,
	OID_MODIFIED_BY NUMERIC,
	OID_OWN_UNIT NUMERIC NOT NULL,
	PAGE_SCFLD_COMP VARCHAR(50) NOT NULL,
	PUBLISHED CHAR(1) NOT NULL,
	RELATED_CSS_URL VARCHAR(100),
	RESOURCE_DIR VARCHAR(100),
	SECT_CONT_COMP VARCHAR(50) NOT NULL,
	STYLE_ID VARCHAR(50),
	TEMPLATE LONGTEXT
);

CREATE TABLE SM_SECTION_TYPE (
	EDITOR_NAME VARCHAR(100) NOT NULL,
	"section_type" VARCHAR(50) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	OID NUMERIC NOT NULL,
	"section_order" NUMERIC NOT NULL,
	PAGE_COMP_ENTITY VARCHAR(100) NOT NULL
);

CREATE TABLE SM_SECTION_VERSION (
	CREATED_DATE DATETIME NOT NULL,
	DETAILS VARCHAR(255),
	IS_LOCKED CHAR(1) NOT NULL,
	MODIFIED_DATE DATETIME,
	NAME VARCHAR(50) NOT NULL,
	OID_COMPONENT NUMERIC NOT NULL,
	OID_CREATED_BY NUMERIC NOT NULL,
	OID_MODIFIED_BY NUMERIC,
	OID_SECTION NUMERIC NOT NULL,
	VERSION_NUMBER NUMERIC NOT NULL,
	VERSION_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_SITE_FILE (
	FILE_DESCRIPTION VARCHAR(6000),
	FILE_PKEY NUMERIC NOT NULL,
	FILE_SIZE_USAGE NUMERIC,
	FILENAME VARCHAR(300),
	MIME_TYPE VARCHAR(50),
	OID_SITE_FILE_FOLDER NUMERIC NOT NULL,
	SHORT_NAME VARCHAR(100),
	UPLOAD_DATE DATETIME,
	UPLOADED_FILENAME VARCHAR(300),
	WEBSITE_FKEY NUMERIC
);

CREATE TABLE SM_SITE_FILE_FOLDER (
	NAME VARCHAR(765) NOT NULL,
	OID NUMERIC NOT NULL,
	OID_PARENT_FOLDER NUMERIC,
	WEBSITE_FKEY NUMERIC 
);

CREATE TABLE SM_STYLE (
	DATE_CREATED DATETIME NOT NULL,
	DATE_MODIFIED DATETIME,
	NAME VARCHAR(300) NOT NULL,
	NOTES VARCHAR(6000),
	OID NUMERIC NOT NULL,
	OID_CREATED_BY NUMERIC NOT NULL,
	OID_MODIFIED_BY NUMERIC,
	OID_OWN_UNIT NUMERIC NOT NULL,
	PUBLISHED CHAR(1) NOT NULL,
	STYLE_ID VARCHAR(150) NOT NULL,
	TEMPLATE LONGTEXT
);

CREATE TABLE TASK_SECTION (
	SECTION_ID NUMERIC NOT NULL,
	TASK_ID NUMERIC NOT NULL
);

CREATE TABLE TASK_STATUS (
	"status_key" VARCHAR(50) NOT NULL,
	name VARCHAR(50) NOT NULL,
	the_id BIGINT NOT NULL
);

CREATE TABLE TASK_TABLE (
	TASK_ID NUMERIC NOT NULL,
	TABLE_ID BIGINT NOT NULL
);

CREATE TABLE SM_USAGE_LOG (
	ACCESS_TIME DATETIME,
	USAGE_LOG_PKEY NUMERIC NOT NULL,
	USER_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_USER (
	ORG_UNIT_FOR_STYLES NUMERIC,
	PASSWORD VARCHAR(300),
	USER_ID VARCHAR(300) NOT NULL,
	USER_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_USER_GROUP (
	GROUP_PKEY NUMERIC NOT NULL,
	USER_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_WEBSITE (
	CAN_REPLICATE CHAR(1),
	CONTACT_EMAIL VARCHAR(300),
	CONTACT_FAX VARCHAR(75),
	CONTACT_NAME VARCHAR(300),
	CONTACT_PHONE VARCHAR(75),
	DATE_LAST_MODIFIED DATETIME,
	DATE_CREATED DATETIME,
	FILE_SIZE_USAGE NUMERIC,
	GROUP_PKEY NUMERIC,
	MEG_QUOTA NUMERIC,
	OID_PARENT_ORG_UNIT NUMERIC,
	OID_SECTION_STYLE NUMERIC NOT NULL,
	PUBLICATION_PERMITTED CHAR(1),
	PUBLISHED CHAR(1),
	REDIRECT_URL VARCHAR(255),
	SHOW_BANNER CHAR(1),
	SHOW_FOOTER CHAR(1),
	SHOW_LOGIN_LOGOUT_LINKS CHAR(1),
	SHOW_NAVBAR CHAR(1),
	SITE_ID VARCHAR(150),
	CUSTOM_HEADER_CONTENT LONGTEXT,
	USER_FKEY NUMERIC,
	WEBSITE_PKEY NUMERIC NOT NULL
);

CREATE TABLE SM_WEBSITE_CHANGE_LOG (
	CHANGES VARCHAR(1999),
	DATE_RECORDED DATETIME NOT NULL,
	NOTES VARCHAR(1999),
	OID NUMERIC NOT NULL,
	USER_FKEY NUMERIC NOT NULL,
	WEBSITE_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_WEBSITE_REQUEST (
	ADMINISTRATIVE_NOTES LONGTEXT,
	DATE_REQUESTED DATETIME NOT NULL,
	DATE_RESOLVED DATETIME,
	OID NUMERIC NOT NULL,
	ORG_UNIT_OID NUMERIC NOT NULL,
	REQUESTOR_NOTE VARCHAR(1999),
	SITE_ID VARCHAR(50) NOT NULL,
	USER_FKEY NUMERIC NOT NULL,
	WEBSITE_FKEY NUMERIC
);

CREATE TABLE SM_WEBSITE_TABLE (
	TABLE_ID BIGINT NOT NULL,
	WEBSITE_FKEY NUMERIC NOT NULL
);

CREATE TABLE SM_DA_WEBSITE_GRP_NOTIFICATION (
	GROUP_PKEY NUMERIC NOT NULL,
	COMPONENT_ID NUMERIC NOT NULL
);

CREATE TABLE TASK (
	BINDINGS LONGTEXT,
	CREATED_DATE DATETIME NOT NULL,
	DETAILS VARCHAR(255),
	FAILURE_REASON VARCHAR(1999),
	IS_NAVIGABLE CHAR(1),
	RELATED_SECTION_ID NUMERIC,
	SOURCE_SECTION_ID NUMERIC,
	STATUS_ID BIGINT NOT NULL,
	TASK_ID BIGINT NOT NULL,
	TASK_TYPE VARCHAR(255) NOT NULL,
	USER_ID NUMERIC NOT NULL,
	ORG_UNIT_ID NUMERIC,
	REQUEST_ID NUMERIC,
	RELATED_SITE_FILE_FOLDER_ID NUMERIC,
	RELATED_TABLE_ID NUMERIC,
	RELATED_SITE_FILE_ID NUMERIC
);

ALTER TABLE SM_BANNER ADD PRIMARY KEY (WEBSITE_FKEY);

ALTER TABLE SM_CHANGE_LOG ADD PRIMARY KEY (OID);

ALTER TABLE SM_DA_WEBSITE_GRP_NOTIFICATION ADD PRIMARY KEY (GROUP_PKEY,COMPONENT_ID);

ALTER TABLE SM_ERROR_LOG ADD PRIMARY KEY (OID);

ALTER TABLE SM_FILE_PASSWORD ADD PRIMARY KEY (FILE_PASSWORD_PKEY);

ALTER TABLE SM_FOOTER ADD PRIMARY KEY (WEBSITE_FKEY);

ALTER TABLE SM_GROUP ADD PRIMARY KEY (GROUP_PKEY);

ALTER TABLE TASK ADD PRIMARY KEY (TASK_ID);

ALTER TABLE SM_GROUP_FILE ADD PRIMARY KEY (GROUP_PKEY,FILE_PKEY);

ALTER TABLE SM_GROUP_SECTION ADD PRIMARY KEY (GROUP_PKEY,SECTION_PKEY);

ALTER TABLE SM_ORG_UNIT ADD PRIMARY KEY (OID);

ALTER TABLE SM_ORG_UNIT_USER ADD PRIMARY KEY (ORG_UNIT_OID,USER_PKEY);

ALTER TABLE SM_VIRTUAL_TABLE ADD PRIMARY KEY (TABLE_ID);

ALTER TABLE SM_SECTION ADD PRIMARY KEY (SECTION_PKEY);

ALTER TABLE SM_SECTION_CONTRIBUTOR_GROUP ADD PRIMARY KEY (GROUP_PKEY,SECTION_PKEY);

ALTER TABLE SM_SECTION_EDITOR_GROUP ADD PRIMARY KEY (GROUP_PKEY,SECTION_PKEY);

ALTER TABLE SM_SECTION_STYLE ADD PRIMARY KEY (OID);

ALTER TABLE SM_SECTION_TYPE ADD PRIMARY KEY (OID);

ALTER TABLE SM_SECTION_VERSION ADD PRIMARY KEY (VERSION_PKEY);

ALTER TABLE SM_SITE_FILE ADD PRIMARY KEY (FILE_PKEY);

ALTER TABLE SM_SITE_FILE_FOLDER ADD PRIMARY KEY (OID);

ALTER TABLE SM_STYLE ADD PRIMARY KEY (OID);

ALTER TABLE TASK_STATUS ADD PRIMARY KEY (THE_ID);

ALTER TABLE TASK_SECTION ADD PRIMARY KEY (TASK_ID,SECTION_ID);

ALTER TABLE SM_USAGE_LOG ADD PRIMARY KEY (USAGE_LOG_PKEY);

ALTER TABLE SM_USER ADD PRIMARY KEY (USER_PKEY);

ALTER TABLE TASK_TABLE ADD PRIMARY KEY (TABLE_ID,TASK_ID);

ALTER TABLE SM_USER_GROUP ADD PRIMARY KEY (GROUP_PKEY,USER_PKEY);

ALTER TABLE SM_WEBSITE ADD PRIMARY KEY (WEBSITE_PKEY);

ALTER TABLE SM_WEBSITE_CHANGE_LOG ADD PRIMARY KEY (OID);

ALTER TABLE SM_WEBSITE_TABLE ADD PRIMARY KEY (TABLE_ID,WEBSITE_FKEY);

ALTER TABLE SM_WEBSITE_REQUEST ADD PRIMARY KEY (OID);

--ALTER TABLE SM_CHANGE_LOG ADD FOREIGN KEY (USER_FKEY) REFERENCES SM_USER (USER_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_ORG_UNIT_USER ADD FOREIGN KEY (USER_PKEY) REFERENCES SM_USER (USER_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_ORG_UNIT_USER ADD FOREIGN KEY (ORG_UNIT_OID) REFERENCES SM_ORG_UNIT (OID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_WEBSITE_CHANGE_LOG ADD FOREIGN KEY (WEBSITE_FKEY) REFERENCES SM_WEBSITE (WEBSITE_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_WEBSITE_CHANGE_LOG ADD FOREIGN KEY (USER_FKEY) REFERENCES SM_USER (USER_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_WEBSITE_REQUEST ADD FOREIGN KEY (WEBSITE_FKEY) REFERENCES SM_WEBSITE (WEBSITE_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_WEBSITE_REQUEST ADD FOREIGN KEY (USER_FKEY) REFERENCES SM_USER (USER_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_WEBSITE_REQUEST ADD FOREIGN KEY (ORG_UNIT_OID) REFERENCES SM_ORG_UNIT (OID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (STATUS_ID) REFERENCES TASK_STATUS (THE_ID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (SOURCE_SECTION_ID) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (RELATED_SECTION_ID) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (REQUEST_ID) REFERENCES SM_WEBSITE_REQUEST (OID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (ORG_UNIT_ID) REFERENCES SM_ORG_UNIT (OID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (RELATED_SITE_FILE_FOLDER_ID) REFERENCES SM_SITE_FILE_FOLDER (OID) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK ADD FOREIGN KEY (RELATED_SITE_FILE_ID) REFERENCES SM_SITE_FILE (FILE_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_SECTION_CONTRIBUTOR_GROUP ADD FOREIGN KEY (SECTION_PKEY) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_SECTION_EDITOR_GROUP ADD FOREIGN KEY (SECTION_PKEY) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE SM_SECTION_VERSION ADD FOREIGN KEY (OID_SECTION) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK_SECTION ADD FOREIGN KEY (SECTION_ID) REFERENCES SM_SECTION (SECTION_PKEY) DEFERRABLE INITIALLY DEFERRED;

--ALTER TABLE TASK_TABLE ADD FOREIGN KEY (TABLE_ID) REFERENCES SM_VIRTUAL_TABLE (TABLE_ID) DEFERRABLE INITIALLY DEFERRED;


COMMIT;
--------  Paste GVCSiteMaker.eomodeld SQL ending here ---------------------------------------

--------  Paste PageComponents.eomodeld SQL starting here -------------------------------------------
--SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, LOCKING PESSIMISTIC;

CREATE TABLE SM_PAGE_COMP (
	BINDINGS LONGTEXT,
	COMPONENT_ID NUMERIC NOT NULL,
	COMPONENT_TYPE VARCHAR(255) NOT NULL,
	DATE_MODIFIED DATETIME,
	EMBED_SECTION_FKEY NUMERIC,
	EMBED_WEBSITE_FKEY NUMERIC,
	FIELD_ID BIGINT,
	PARENT_ID NUMERIC,
	RELATED_FILE_ID NUMERIC,
	RELATED_SECTION_ID NUMERIC,
	SUB_TYPE VARCHAR(50),
	TABLE_ID BIGINT,
	COLUMN_ID BIGINT,
	TEMPLATE_OID NUMERIC
);

CREATE TABLE SM_DA_MODE_TEMPLATE (
	HTML LONGTEXT,
	OID NUMERIC NOT NULL
);


CREATE TABLE SM_DA_COLUMN_NOTIFICATION (
	COMPONENT_ID NUMERIC NOT NULL,
	COLUMN_COMPONENT_ID NUMERIC NOT NULL
);

ALTER TABLE SM_PAGE_COMP ADD PRIMARY KEY (COMPONENT_ID);

ALTER TABLE SM_DA_MODE_TEMPLATE ADD PRIMARY KEY (OID);

ALTER TABLE SM_DA_COLUMN_NOTIFICATION ADD PRIMARY KEY (COMPONENT_ID,COLUMN_COMPONENT_ID);


COMMIT;
--------  Paste PageComponents.eomodeld SQL Ending here ---------------------------------------------


--
-- Changes to the generated SQL for GVC.SiteMaker purposes
--

--
-- Add GVCSiteMaker specific fields to VirutalField
--
ALTER TABLE VIRTUAL_FIELD ADD COLUMN FILE_FKEY NUMERIC;
ALTER TABLE VIRTUAL_FIELD ADD COLUMN USER_FKEY NUMERIC;


--
-- Remove nullity constraints on these FK columns as it causes problems with EOF operation ordering during deletion.
--
-- SM_BANNER  WEBSITE_FKEY NUMERIC;
-- SM_FOOTER WEBSITE_FKEY NUMERIC;
-- SM_SECTION_STYLE OID_CREATED_BY NUMERIC;
-- SM_SECTION_STYLE OID_OWN_UNIT NUMERIC;
-- SM_STYLE OID_CREATED_BY NUMERIC;
-- SM_STYLE OID_OWN_UNIT NUMERIC;
-- SM_USAGE_LOG USER_PKEY NUMERIC;
-- SM_WEBSITE OID_SECTION_STYLE NUMERIC;


-- 
-- Performance Indexes and Caches
--
CREATE INDEX SM_DA_WEBSITE_GRP_NOTIFICATION     ON SM_DA_WEBSITE_GRP_NOTIFICATION (COMPONENT_ID);
CREATE INDEX SM_FILE_PASSWORD_SITE_FILE_FKEY    ON SM_FILE_PASSWORD (SITE_FILE_PASSWORD_FKEY);
CREATE INDEX SM_GROUP_TYPE                      ON SM_GROUP (TYPE);
CREATE INDEX SM_GROUP_FILE_FILE_PKEY            ON SM_GROUP_FILE (FILE_PKEY);
CREATE INDEX SM_GROUP_PARENT_WEBSITE            ON SM_GROUP (PARENT_WEBSITE);
CREATE INDEX SM_GROUP_SECTION_SECTION_PKEY      ON SM_GROUP_SECTION (SECTION_PKEY);
CREATE INDEX SM_ORG_UNIT_OID_PARENT_ORG_UNIT    ON SM_ORG_UNIT (OID_PARENT_ORG_UNIT);
CREATE INDEX SM_PAGE_COMP_PARENT_ID             ON SM_PAGE_COMP (PARENT_ID);
CREATE INDEX SM_PAGE_COMP_FILE_ID               ON SM_PAGE_COMP (RELATED_FILE_ID);
CREATE INDEX SM_PAGE_COMP_FIELD_ID              ON SM_PAGE_COMP (FIELD_ID);
CREATE INDEX SM_PAGE_COMP_EMBED_SECTION_FKEY    ON SM_PAGE_COMP (EMBED_SECTION_FKEY);
CREATE INDEX SM_PAGE_COMP_EMBED_WEBSITE_FKEY    ON SM_PAGE_COMP (EMBED_WEBSITE_FKEY);
CREATE INDEX SM_PAGE_COMP_TEMPLATE_OID          ON SM_PAGE_COMP (TEMPLATE_OID);
CREATE INDEX SM_PAGE_COMP_COMPONENT_TYPE        ON SM_PAGE_COMP (COMPONENT_TYPE);
CREATE INDEX SM_SECTION_WEBSITE_FKEY            ON SM_SECTION (WEBSITE_FKEY);
CREATE INDEX SM_SECTION_COMPONENT_ID            ON SM_SECTION (COMPONENT_ID);
CREATE INDEX SM_SECTION_STYLE_OID_OWN_UNIT      ON SM_SECTION_STYLE (OID_OWN_UNIT);
CREATE INDEX SM_SECTION_VERSION_OID_COMPONENT   ON SM_SECTION_VERSION (OID_COMPONENT);
CREATE INDEX SM_SITE_FILE_FOLDER_PARENT_FOLDER  ON SM_SITE_FILE_FOLDER (OID_PARENT_FOLDER);
CREATE INDEX SM_SITE_FILE_FOLDER_WEBSITE_FKEY   ON SM_SITE_FILE_FOLDER (WEBSITE_FKEY);
CREATE INDEX SM_SITE_FILE_OID_SITE_FILE_FOLDER  ON SM_SITE_FILE (OID_SITE_FILE_FOLDER);
CREATE INDEX SM_SITE_FILE_WEBSITE_FKEY          ON SM_SITE_FILE (WEBSITE_FKEY);
CREATE INDEX SM_STYLE_OID_OWN_UNIT              ON SM_STYLE (OID_OWN_UNIT);
CREATE INDEX SM_USER_GROUP_USER_PKEY            ON SM_USER_GROUP (USER_PKEY);
--CREATE INDEX SM_USER_ID                         ON SM_USER (USER_ID);
CREATE INDEX SM_USER_ORG_UNIT_FOR_STYLES        ON SM_USER (ORG_UNIT_FOR_STYLES);
CREATE INDEX SM_WEBSITE_OID_PARENT_ORG_UNIT     ON SM_WEBSITE (OID_PARENT_ORG_UNIT);
CREATE INDEX SM_WEBSITE_OID_SECTION_STYLE       ON SM_WEBSITE (OID_SECTION_STYLE);
CREATE INDEX SM_WEBSITE_USER_FKEY               ON SM_WEBSITE (USER_FKEY);
CREATE INDEX CONFIG_GROUP                       ON SM_WEBSITE (GROUP_PKEY);
CREATE INDEX SM_WEBSITE_TABLE_WEBSITE_FKEY      ON SM_WEBSITE_TABLE (WEBSITE_FKEY);

--
-- Case Insensitve Collation for Website SiteID searches
--
--CREATE COLLATION CaseInsensitive FOR INFORMATION_SCHEMA.SQL_TEXT FROM EXTERNAL('CaseInsensitive.coll1');
--COMMIT;
--ALTER COLUMN sm_website.site_id TO COLLATE CASEINSENSITIVE;
--COMMIT;
CREATE INDEX SM_WEBSITE_SITE_ID                 ON SM_WEBSITE (SITE_ID);
COMMIT;

CREATE INDEX VIRTUAL_ROW_VIRTUAL_TABLE_ID       ON VIRTUAL_ROW (VIRTUAL_TABLE_ID, VIRTUAL_ROW_ID);
CREATE INDEX VIRTUAL_COLUMN_LOOKUP_COLUMN_ID    ON VIRTUAL_COLUMN (LOOKUP_COLUMN_ID);
CREATE INDEX VIRTUAL_COLUMN_TABLE_ID            ON VIRTUAL_COLUMN (TABLE_ID, COLUMN_ID);
CREATE INDEX VIRTUAL_FIELD_COLUMN_ID            ON VIRTUAL_FIELD (VIRTUAL_COLUMN_ID, VIRTUAL_FIELD_ID);
CREATE INDEX VIRTUAL_FIELD_VIRTUAL_ROW_ID       ON VIRTUAL_FIELD (VIRTUAL_ROW_ID, VIRTUAL_FIELD_ID);
CREATE INDEX VIRTUAL_FIELD_LOOKUP_VALUE_ID      ON VIRTUAL_FIELD (LOOKUP_VALUE_ID);


CREATE TABLE EO_PK_TABLE (NAME varchar(80), PK BIGINT);
ALTER TABLE EO_PK_TABLE ADD PRIMARY KEY (NAME);

INSERT INTO EO_PK_TABLE(NAME, PK) VALUES ('GVC_LOOKUP', 1);

COMMIT;
