
{
    attributes = 
    (
       
       {
           columnName = ORG_UNIT_FOR_STYLES;
           name = oidOrgUnitForStyleAdmin;
           prototypeName = dbKey;
       }, 
       
       {
           columnName = PASSWORD;
           name = password;
           prototypeName = mediumString;
       }, 
       
       {
           allowsNull = N;
           columnName = USER_ID;
           name = userID;
           prototypeName = mediumString;
       }, 
       
       {
           allowsNull = N;
           columnName = USER_PKEY;
           name = userPKey;
           prototypeName = dbKey;
       }
    );
    attributesUsedForLocking = 
    (
       oidOrgUnitForStyleAdmin, 
       password, 
       userID, 
       userPKey
    );
    cachesObjects = Y;
    className = com.gvcsitemaker.core.PublicUser;
    classProperties = 
    (
       groups, 
       orgUnitToAdminStylesFor, 
       orgUnitsToAdmin, 
       password, 
       userID, 
       websites
    );
    externalName = SM_USER;
    internalInfo = 
    {
        _clientClassPropertyNames = 
        (
           groups, 
           password, 
           userID, 
           websites
        );
    };
    name = PublicUser;
    parent = User;
    primaryKeyAttributes = 
    (
       userPKey
    );
    relationships = 
    (
       
       {
           definition = userGroups.group;
           name = groups;
       }, 
       
       {
           destination = OrgUnit;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = oid;
                  sourceAttribute = oidOrgUnitForStyleAdmin;
              }
           );
           name = orgUnitToAdminStylesFor;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = OrgUnitUser;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = userPKey;
                  sourceAttribute = userPKey;
              }
           );
           name = orgUnitUsers;
       }, 
       
       {
           definition = orgUnitUsers.orgUnit;
           internalInfo = 
           {
               _nameInObjectStore = orgUnitUsers_orgUnit;
           };
           name = orgUnitsToAdmin;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = UserGroup;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = userPKey;
                  sourceAttribute = userPKey;
              }
           );
           name = userGroups;
           propagatesPrimaryKey = Y;
       }, 
       
       {
           destination = Website;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = userFKey;
                  sourceAttribute = userPKey;
              }
           );
           name = websites;
       }
    );
    restrictingQualifier = "(userID = 'unauthenticateduser')";
}